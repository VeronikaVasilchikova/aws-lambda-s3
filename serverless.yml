service: automated-settlements

frameworkVersion: '3'

plugins:
  - serverless-esbuild
  - serverless-plugin-resource-tagging
  - serverless-deployment-bucket

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  runtime: nodejs18.x
  region: us-west-2
  memorySize: 128
  environment:
    DATADOG_HOST: ${self:custom.datadoghost.${self:custom.stage}}
    DATADOG_API_KEY: ${self:custom.datadogapikey.${self:custom.stage}}
    DATADOG_SERVICE: ${self:custom.datadogservice.${self:custom.stage}}
    BASE_URL: ${self:custom.baseurl.${self:custom.stage}}
  stackName: ${self:service}-${self:provider.stage}-stack
  stackTags:
    env: ${self:provider.stage}
    service: ${self:service}.kafene.com
    version: ${file(./package.json):version}
  deploymentBucket:
    name: ${self:service}-${self:provider.stage}-${self:provider.region}-bucket

package:
  individually: true

functions:
  handle-offers:
    handler: src/handler.main
      
custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    exclude:
      - aws-sdk
    target: node18
    define:
      'require.resolve': undefined
    platform: node
    concurrency: 10
  datadoghost:
    dev: ${ssm:/automated-settlements/dev/DATADOG_HOST~true}
    prod: ${ssm:/automated-settlements/prod/DATADOG_HOST~true}
  datadogapikey:
    dev: ${ssm:/automated-settlements/dev/DATADOG_API_KEY~true}
    prod: ${ssm:/automated-settlements/prod/DATADOG_API_KEY~true}
  datadogservice:
    dev: ${ssm:/automated-settlements/dev/DATADOG_SERVICE~true}
    prod: ${ssm:/automated-settlements/prod/DATADOG_SERVICE~true}
  baseurl:
    dev: ${ssm:/automated-settlements/dev/BASE_URL~true}
    prod: ${ssm:/automated-settlements/prod/BASE_URL~true}

